spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#true 설정 시 jpa 쿼리문 확인 가능
spring.jpa.show-sql=true

#DDL 정의시 DB의 고유 기능을 사용 가능
spring.jpa.hibernate.ddl-auto=update

# JPA의 구현체인 Hibernate가 동작하면서 발생한 SQL의 가독성을 높여줌
spring.jpa.properties.hibernate.format_sql=true

#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

# Spring Security 로그 레벨 설정
logging.level.org.springframework.security=DEBUG
# HTTP 요청과 응답 로그 레벨 설정
logging.level.org.springframework.web=DEBUG

server.port=8080
spring:
jpa:
properties:
hibernate:
event:
merge:
entity_copy_observer: allow


spring.security.oauth2.client.registration.google.client-id=80808375153-014f1vnkvubc81ivvcr0vb7cjdsv1r97.apps.g>spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://3.36.121.52:8081/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://accounts.google.com/o/oauth2/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

# 영화 api 관련
tmdb.api.key = c2b9766d219d3e785cfa2ff128b610ab
kobis.api.key = 513c621dca38ccd4172bad9c2f903a54

spring.cache.type=simple

# 캐시 관련
management.endpoint.caches.enabled=true
management.endpoints.web.exposure.include=caches,cachecontents, *

# 사용자 사진 저장 관련
file.upload-dir=/app/uploads
spring.web.resources.static-locations=classpath:/static/,file:/app/uploads/
file.download-url=/uploads

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

jwt.secret=my-secret-key-516
jwt.expiration=2592000000

# redis
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD:testpassword}